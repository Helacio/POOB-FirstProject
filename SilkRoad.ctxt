#BlueJ class context
comment0.target=SilkRoad
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Simulator\ here.\r\n\ @author\ SanchezVillagran\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=len
comment1.target=SilkRoad(int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Simulator\r\n
comment10.params=location\ tenges
comment10.target=void\ addShop(int,\ int)
comment10.text=\r\n\ Add\ a\ shop\ in\ a\ specific\ location\r\n\ @param\ location\ Place\ in\ the\ silk\ road\r\n\ @param\ tenges\ Num\ money\ in\ the\ shop\r\n
comment11.params=
comment11.target=void\ addRobot()
comment11.text=\r\n\ Add\ a\ robot\ in\ a\ random\ position\ with\ a\ random\ color\r\n
comment12.params=location
comment12.target=void\ addRobot(int)
comment12.text=\r\n\ Add\ a\ robot\ in\ a\ determinated\ place\r\n\ @param\ location\ Is\ tne\ initial\ location\ of\ the\ robot\r\n
comment13.params=robotId
comment13.target=void\ removeRobot(int)
comment13.text=\r\n\ Delete\ a\ specific\ robot\ \r\n\ @param\ It\ gives\ robot's\ id\ from\ HashMap\ of\ robots\ to\ delete\ it\r\n
comment14.params=shopId
comment14.target=void\ removeShop(int)
comment14.text=\r\n\ Delete\ a\ specific\ shop\r\n\ @param\ shopId\ It\ gives\ a\ shop's\ id\ from\ HashMap\ of\ shops\ to\ delete\ it\ \r\n
comment15.params=
comment15.target=void\ resetSilkRoad()
comment15.text=\r\n\ Reset\ the\ silkRoad,\ set\ the\ robot\ positions\ and\ shop's\ tenges\ given\ at\ the\ start\ of\ day\r\n
comment16.params=
comment16.target=java.util.HashMap\ getRobots()
comment16.text=\r\n\ Get\ all\ robots\ created\r\n
comment17.params=
comment17.target=java.util.HashMap\ getShops()
comment17.text=\r\n\ Get\ all\ the\ shops\ created\r\n
comment18.params=
comment18.target=void\ resetShops()
comment18.text=\r\n\ Set\ shops\ with\ Tenge\ starting\ from\ the\ beginning\ of\ the\ day.\r\n
comment19.params=
comment19.target=void\ resetRobots()
comment19.text=\r\n\ Make\ reset\ the\ all\ robots\ position\ \r\n\ *\ @return\ Give\ the\ total\ gains\ from\ all\ robots\r\n
comment2.params=days
comment2.target=SilkRoad(int[])
comment2.text=\r\n\ Constructor\ for\ SilkRoad\ with\ icpc\ case\r\n\ @param\ days\ The\ input\ of\ maraton\ icpc\ J\ but\ all\ in\ just\ one\ line\r\n
comment20.params=robotId\ shopId
comment20.target=void\ moveRobot(int,\ int)
comment20.text=\r\n\ Move\ a\ robot\ to\ a\ specific\ cell\r\n
comment21.params=
comment21.target=int\ getGains()
comment21.text=\r\n\ Get\ the\ gains\ from\ all\ robots\r\n\ *\ @return\ Give\ the\ total\ gains\ from\ all\ robots\r\n
comment22.params=
comment22.target=void\ getSilkRoadInfo()
comment22.text=\r\n\ Give\ information\ about\ SilkRoad\r\n
comment23.params=
comment23.target=void\ makeVisible()
comment23.text=\r\n\ Change\ all\ the\ silk\ road\ to\ visible\r\n
comment24.params=
comment24.target=void\ makeInvisible()
comment24.text=\r\n\ Change\ all\ the\ silk\ road\ to\ invisible\r\n
comment25.params=
comment25.target=void\ createProgressBar()
comment25.text=\r\n\ Creates\ a\ ProgressBar\ at\ the\ bottom\r\n
comment26.params=idRobot\ moveIndex
comment26.target=int\ profitPerMove(int,\ int)
comment26.text=\r\n\ Consult\ the\ profit\ of\ a\ robot\r\n\ @param\ robotId\ is\ the\ initial\ location\ of\ the\ robot\r\n\ @param\ idStore\ is\ the\ location\ of\ the\ shop\r\n\ @return\ gets\ the\ profit\ in\ a\ movement\r\n
comment3.params=len
comment3.target=void\ createSilkRoad(int)
comment4.params=
comment4.target=java.util.ArrayList\ generateSpiral()
comment4.text=\r\n\ Generate\ Spiral\r\n\ matrix\ will\ be\ 15x15,\ at\ most\ 225\ steps\ on\ the\ silk\ road\r\n
comment5.params=len
comment5.target=void\ createSilkRoad(int)
comment6.params=
comment6.target=int\ getLenRoad()
comment7.params=
comment7.target=void\ cleanRoad()
comment7.text=\r\n\ Deletes\ the\ cells\ from\ the\ canvas\ but\ they\ still\ exist\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getPath()
comment9.params=
comment9.target=void\ addShop()
comment9.text=\r\n\ Add\ a\ shop\ in\ a\ random\ position\ with\ a\ random\ color\r\n
numComments=31
